#include <iostream>
#include <cmath>
using std::cin;
using std::cout;
using std::endl;

#define EPSILON 1e-6

double f(double x) {
    return 2 * pow(x, 3) - 4 * pow(x, 2) + 3 * x - 6;
}

double f_prime(double x) {
    return 6 * pow(x, 2) - 8 * x + 3;
}
double h(double x) {
    return pow(x, 3) - 4 * pow(x, 2) + 3 * x - 6;
}
double h_prime(double x) {
    return 3 * pow(x, 2) - 8 * x + 3;
}
double newton(double (*f)(double), double (*f_prime)(double)) {
    double x = 1.5;
    while (fabs((*f)(x)) > EPSILON){
        x = x - (*f)(x) / (*f_prime)(x);
    }
    return x;
}

int main() {
    cout<<newton(f, f_prime)<<endl;
    cout<<newton(h, h_prime)<<endl;
    return 0;
}
