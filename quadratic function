/*NAME:Finding the root(s) of quadratic function(s)
BY RickyChan
2017-9-29*/

#include<iostream>
#include<cmath>
#include<iomanip>
using namespace std;
int main() {
	int n, i;
	double delta[100],a[100], b[100], c[100]; 
	cin >> n;
	for (i = 0; i < n; i++) {
		cin >> a[i] >> b[i] >> c[i];
		delta[i] = pow((b[i]), 2) - 4 * a[i] * c[i];
	}
	for (i = 0; i < n; i++) {
		if (delta[i] == 0) {
			cout << "x1=x2=" << fixed << setprecision(5) << -(b[i]) / (2 * a[i])<< endl;
		}
		if (delta[i] > 0) {
			cout << "x1=" << fixed << setprecision(5) << (-(b[i]) + sqrt(delta[i])) / (2 * a[i]) << ";";
			cout << "x2=" << fixed << setprecision(5) << (-(b[i]) - sqrt(delta[i])) / (2 * a[i])<<endl;
		}
		if (b[i] == 0 && delta[i] < 0) {
			cout << "x1=" << fixed << setprecision(5) << ((b[i])) / (2 * a[i]) << "+" << sqrt(fabs(delta[i])) / (2 * a[i]) << "i" << ";";
			cout << "x2=" << fixed << setprecision(5) << ((b[i])) / (2 * a[i]) << "-" << sqrt(fabs(delta[i])) / (2 * a[i]) << "i" << endl;
		}
		if (delta[i] < 0 && b[i] != 0) {
			
			cout << "x1=" << fixed << setprecision(5) << (-(b[i])) / (2 * a[i]) << "+" <<sqrt(fabs(delta[i])) / (2 * a[i]) <<"i"<< ";";
			cout << "x2=" << fixed << setprecision(5) << (-(b[i])) / (2 * a[i]) << "-" << sqrt(fabs(delta[i])) / (2 * a[i]) << "i"<<endl;
		}
		
	}
	

		return 0;
}
